import {Button, CardImg, CardTitle, Container, Jumbotron} from "reactstrap";
import React from "react";
import type {HomeStavanger} from "../../myhome/stavanger";
import {connectInstrument} from "../../alta/react";
import type {LandingStavanger} from "../stavanger";
import {hasUserPortal} from "../../portals";

const TrontheimBanner = (props) => {
    return <React.Fragment>
        <Jumbotron className="text-center">
            <CardImg src={"../images/logo.png"} className={"logo"}/>
            <p/>
            <CardTitle>
                Trontheim is your goto provider for evaluation of Microscopy Data
                <p><small>It may help you with everything</small></p>
            </CardTitle>

            <CardTitle>
                {!props.hasUser &&
                <Button outline onClick={props.onClick}><p><img src={"../images/oslologo.png"} className={"oslologo"}/>
                </p>Login with Oslo</Button>}
                <br/>
                {!props.hasUser && <p><br/><small>Oslo is the backend companion</small></p>}

            </CardTitle>
        </Jumbotron>
        <Container>
                    <span className="justify-content-center text-justify">
                    Morphometrical analysis of immunohistological stainings after high resolution microscopic imaging has played a key role in our understanding of subcellular neuronal domains, such as the axon initial segment and its plasticity. So far this has been accomplished (with a varying degree of scientific precision) with methods spanning from Neurolucida or ImageJ and self-written macros to simply measuring “by hand” in the software supplied by the microscope manufacturer. In today’s landscape of proprietary and barely interoperable software, it has become evident that there is a need for a performant solution that is open and easy to use. This is where AISuite steps in. After evaluating the state of analytical tools in the literature, we developed a strategy for an open-source, user-flow centric and expandable application. Python as a potent and understandable scientific programming languages was selected as the basis of the software suite. Throughout the development, a constant feedback and feature request cycle was established among all members of the lab and data was validated with data generated by previous methods and on ongoing projects also based on data supplied by collaborators.
                    </span>
        </Container>
    </React.Fragment>;
}

const mapStavangerToProps = (stavanger: LandingStavanger) => ({
    hasUser: hasUserPortal
});

const mapStavangerToDispatch  = (stavanger: HomeStavanger) =>  ({
    onClick: () => stavanger.page.model.dynamic("REQUEST_OSLO_MODAL").request(),
});


export default connectInstrument(mapStavangerToProps, mapStavangerToDispatch)(TrontheimBanner);